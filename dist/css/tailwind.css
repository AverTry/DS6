@import "./forms.css";

/*! tailwindcss v2.2.7 | MIT License | https://tailwindcss.com */

/*! modern-normalize v1.1.0 | MIT License | https://github.com/sindresorhus/modern-normalize */

/*
Document
========
*/

/**
Use a better box model (opinionated).
*/

*,
::before,
::after {
  box-sizing: border-box;
}

/**
Use a more readable tab size (opinionated).
*/

html {
  -moz-tab-size: 4;
  -o-tab-size: 4;
     tab-size: 4;
}

/**
1. Correct the line height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
*/

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/*
Sections
========
*/

/**
Remove the margin in all browsers.
*/

body {
  margin: 0;
}

/**
Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
*/

body {
  font-family:
		system-ui,
		-apple-system, /* Firefox supports this but not yet `system-ui` */
		'Segoe UI',
		Roboto,
		Helvetica,
		Arial,
		sans-serif,
		'Apple Color Emoji',
		'Segoe UI Emoji';
}

/*
Grouping content
================
*/

/**
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
}

/*
Text-level semantics
====================
*/

/**
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/**
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/**
1. Improve consistency of default fonts in all browsers. (https://github.com/sindresorhus/modern-normalize/issues/3)
2. Correct the odd 'em' font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family:
		ui-monospace,
		SFMono-Regular,
		Consolas,
		'Liberation Mono',
		Menlo,
		monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/**
Prevent 'sub' and 'sup' elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
Tabular data
============
*/

/**
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
}

/*
Forms
=====
*/

/**
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
Remove the inheritance of text transform in Edge and Firefox.
1. Remove the inheritance of text transform in Firefox.
*/

button,
select {
  /* 1 */
  text-transform: none;
}

/**
Correct the inability to style clickable types in iOS and Safari.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
}

/**
Remove the inner border and padding in Firefox.
*/

::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
Restore the focus styles unset by the previous rule.
*/

:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
Remove the additional ':invalid' styles in Firefox.
See: https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/**
Remove the padding so developers are not caught out when they zero out 'fieldset' elements in all browsers.
*/

legend {
  padding: 0;
}

/**
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/**
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/**
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to 'inherit' in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Interactive
===========
*/

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/**
 * Manually forked from SUIT CSS Base: https://github.com/suitcss/base
 * A thin layer on top of normalize.css that provides a starting point more
 * suitable for web applications.
 */

/**
 * Removes the default spacing and border for appropriate elements.
 */

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

button {
  background-color: transparent;
  background-image: none;
}

fieldset {
  margin: 0;
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * Tailwind custom reset styles
 */

/**
 * 1. Use the user's configured `sans` font-family (with Tailwind's default
 *    sans-serif font stack as a fallback) as a sane default.
 * 2. Use Tailwind's default "normal" line-height so the user isn't forced
 *    to override it to ensure consistency even when using the default theme.
 */

html {
  font-family: Inter;
  /* 1 */
  line-height: 1.5;
  /* 2 */
}

/**
 * Inherit font-family and line-height from `html` so users can set them as
 * a class directly on the `html` element.
 */

body {
  font-family: inherit;
  line-height: inherit;
}

/**
 * 1. Prevent padding and border from affecting element width.
 *
 *    We used to set this in the html element and inherit from
 *    the parent element for everything else. This caused issues
 *    in shadow-dom-enhanced elements like <details> where the content
 *    is wrapped by a div with box-sizing set to `content-box`.
 *
 *    https://github.com/mozdevs/cssremedy/issues/4
 *
 *
 * 2. Allow adding a border to an element by just adding a border-width.
 *
 *    By default, the way the browser specifies that an element should have no
 *    border is by setting it's border-style to `none` in the user-agent
 *    stylesheet.
 *
 *    In order to easily add borders to elements by just setting the `border-width`
 *    property, we change the default border-style for all elements to `solid`, and
 *    use border-width to hide them instead. This way our `border` utilities only
 *    need to set the `border-width` property instead of the entire `border`
 *    shorthand, making our border utilities much more straightforward to compose.
 *
 *    https://github.com/tailwindcss/tailwindcss/pull/116
 */

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

/*
 * Ensure horizontal rules are visible by default
 */

hr {
  border-top-width: 1px;
}

/**
 * Undo the `border-style: none` reset that Normalize applies to images so that
 * our `border-{width}` utilities have the expected effect.
 *
 * The Normalize reset is unnecessary for us since we default the border-width
 * to 0 on all elements.
 *
 * https://github.com/tailwindcss/tailwindcss/issues/362
 */

img {
  border-style: solid;
}

textarea {
  resize: vertical;
}

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;
  color: #9ca3af;
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  color: #9ca3af;
}

button,
[role="button"] {
  cursor: pointer;
}

table {
  border-collapse: collapse;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/**
 * Reset links to optimize for opt-in styling instead of
 * opt-out.
 */

a {
  color: inherit;
  text-decoration: inherit;
}

/**
 * Reset form element properties that are easy to forget to
 * style explicitly so you don't inadvertently introduce
 * styles that deviate from your design system. These styles
 * supplement a partial reset that is already applied by
 * normalize.css.
 */

button,
input,
optgroup,
select,
textarea {
  padding: 0;
  line-height: inherit;
  color: inherit;
}

/**
 * Use the configured 'mono' font family for elements that
 * are expected to be rendered with a monospace font, falling
 * back to the system monospace stack if there is no configured
 * 'mono' font family.
 */

pre,
code,
kbd,
samp {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

/**
 * 1. Make replaced elements `display: block` by default as that's
 *    the behavior you want almost all of the time. Inspired by
 *    CSS Remedy, with `svg` added as well.
 *
 *    https://github.com/mozdevs/cssremedy/issues/14
 * 
 * 2. Add `vertical-align: middle` to align replaced elements more
 *    sensibly by default when overriding `display` by adding a
 *    utility like `inline`.
 *
 *    This can trigger a poorly considered linting error in some
 *    tools but is included by design.
 * 
 *    https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210
 */

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/**
 * Constrain images and videos to the parent width and preserve
 * their intrinsic aspect ratio.
 *
 * https://github.com/mozdevs/cssremedy/issues/14
 */

img,
video {
  max-width: 100%;
  height: auto;
}

/**
 * Ensure the default browser behavior of the `hidden` attribute.
 */

[hidden] {
  display: none;
}

*, ::before, ::after{
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/);
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgba(59, 130, 246, 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
}

/* Blocking the input Border behind the Outline label */

.container{
  width: 100%;
}

@media (min-width: 640px){
  .container{
    max-width: 640px;
  }
}

@media (min-width: 768px){
  .container{
    max-width: 768px;
  }
}

@media (min-width: 1024px){
  .container{
    max-width: 1024px;
  }
}

@media (min-width: 1280px){
  .container{
    max-width: 1280px;
  }
}

@media (min-width: 1536px){
  .container{
    max-width: 1536px;
  }
}

.pointer-events-none{
  pointer-events: none;
}

.invisible{
  visibility: hidden;
}

.fixed{
  position: fixed;
}

.absolute{
  position: absolute;
}

.relative{
  position: relative;
}

.bottom-0{
  bottom: 0px;
}

.left-4{
  left: 1rem;
}

.top-0{
  top: 0px;
}

.top-5{
  top: 1.25rem;
}

.right-7{
  right: 1.75rem;
}

.top-4{
  top: 1rem;
}

.left-3{
  left: 0.75rem;
}

.top-1{
  top: 0.25rem;
}

.right-9{
  right: 2.25rem;
}

.left-0{
  left: 0px;
}

.top-16{
  top: 4rem;
}

.bottom-12{
  bottom: 3rem;
}

.right-0{
  right: 0px;
}

.right-11{
  right: 2.75rem;
}

.top-1\/4{
  top: 25%;
}

.top-3{
  top: 0.75rem;
}

.right-4{
  right: 1rem;
}

.-bottom-0{
  bottom: 0px;
}

.-bottom-1{
  bottom: -0.25rem;
}

.bottom-4{
  bottom: 1rem;
}

.z-50{
  z-index: 50;
}

.z-10{
  z-index: 10;
}

.order-3{
  order: 3;
}

.order-1{
  order: 1;
}

.order-2{
  order: 2;
}

.col-span-2{
  grid-column: span 2 / span 2;
}

.m-auto{
  margin: auto;
}

.mx-0\.5{
  margin-left: 0.125rem;
  margin-right: 0.125rem;
}

.mx-0{
  margin-left: 0px;
  margin-right: 0px;
}

.mx-2{
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}

.mx-5{
  margin-left: 1.25rem;
  margin-right: 1.25rem;
}

.my-3{
  margin-top: 0.75rem;
  margin-bottom: 0.75rem;
}

.mx-auto{
  margin-left: auto;
  margin-right: auto;
}

.mb-16{
  margin-bottom: 4rem;
}

.mb-3{
  margin-bottom: 0.75rem;
}

.ml-4{
  margin-left: 1rem;
}

.mt-12{
  margin-top: 3rem;
}

.ml-1{
  margin-left: 0.25rem;
}

.mt-8{
  margin-top: 2rem;
}

.mt-4{
  margin-top: 1rem;
}

.mb-2{
  margin-bottom: 0.5rem;
}

.mr-\[30\%\]{
  margin-right: 30%;
}

.box-border{
  box-sizing: border-box;
}

.block{
  display: block;
}

.flex{
  display: flex;
}

.grid{
  display: grid;
}

.contents{
  display: contents;
}

.hidden{
  display: none;
}

.h-\[40vh\]{
  height: 40vh;
}

.h-full{
  height: 100%;
}

.h-0\.5{
  height: 0.125rem;
}

.h-0{
  height: 0px;
}

.h-4{
  height: 1rem;
}

.h-12{
  height: 3rem;
}

.h-6{
  height: 1.5rem;
}

.h-1{
  height: 0.25rem;
}

.h-5{
  height: 1.25rem;
}

.max-h-8{
  max-height: 2rem;
}

.max-h-12{
  max-height: 3rem;
}

.w-\[40vw\]{
  width: 40vw;
}

.w-4{
  width: 1rem;
}

.w-40{
  width: 10rem;
}

.w-screen{
  width: 100vw;
}

.w-full{
  width: 100%;
}

.w-6{
  width: 1.5rem;
}

.w-5{
  width: 1.25rem;
}

.w-0{
  width: 0px;
}

.w-\[104px\]{
  width: 104px;
}

.min-w-\[264px\]{
  min-width: 264px;
}

.min-w-full{
  min-width: 100%;
}

.min-w-\[250px\]{
  min-width: 250px;
}

.min-w-\[150px\]{
  min-width: 150px;
}

.max-w-screen-lg{
  max-width: 1024px;
}

.max-w-\[150px\]{
  max-width: 150px;
}

.flex-shrink{
  flex-shrink: 1;
}

.flex-grow-0{
  flex-grow: 0;
}

.flex-grow{
  flex-grow: 1;
}

.transform-gpu{
  --tw-transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.cursor-pointer{
  cursor: pointer;
}

.grid-flow-row-dense{
  grid-auto-flow: row dense;
}

.grid-cols-6{
  grid-template-columns: repeat(6, minmax(0, 1fr));
}

.flex-col{
  flex-direction: column;
}

.flex-wrap{
  flex-wrap: wrap;
}

.flex-nowrap{
  flex-wrap: nowrap;
}

.content-center{
  align-content: center;
}

.items-center{
  align-items: center;
}

.justify-center{
  justify-content: center;
}

.justify-around{
  justify-content: space-around;
}

.gap-4{
  gap: 1rem;
}

.gap-2{
  gap: 0.5rem;
}

.gap-1{
  gap: 0.25rem;
}

.gap-x-4{
  -moz-column-gap: 1rem;
       column-gap: 1rem;
}

.self-center{
  align-self: center;
}

.overflow-hidden{
  overflow: hidden;
}

.overflow-x-hidden{
  overflow-x: hidden;
}

.overflow-y-visible{
  overflow-y: visible;
}

.rounded-xl{
  border-radius: 0.75rem;
}

.rounded-full{
  border-radius: 9999px;
}

.rounded-md{
  border-radius: 0.375rem;
}

.rounded-lg{
  border-radius: 0.5rem;
}

.rounded-t-lg{
  border-top-left-radius: 0.5rem;
  border-top-right-radius: 0.5rem;
}

.rounded-b-lg{
  border-bottom-right-radius: 0.5rem;
  border-bottom-left-radius: 0.5rem;
}

.border-b-2{
  border-bottom-width: 2px;
}

.border-transparent{
  border-color: transparent;
}

.border-gray-300{
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
}

.bg-gray-200{
  --tw-bg-opacity: 1;
  background-color: rgba(229, 231, 235, var(--tw-bg-opacity));
}

.bg-white{
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.bg-gray-100{
  --tw-bg-opacity: 1;
  background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
}

.bg-gray-50{
  --tw-bg-opacity: 1;
  background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
}

.bg-gray-400{
  --tw-bg-opacity: 1;
  background-color: rgba(156, 163, 175, var(--tw-bg-opacity));
}

.bg-opacity-90{
  --tw-bg-opacity: 0.9;
}

.p-4{
  padding: 1rem;
}

.p-2{
  padding: 0.5rem;
}

.p-0{
  padding: 0px;
}

.py-2{
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
}

.px-4{
  padding-left: 1rem;
  padding-right: 1rem;
}

.py-1{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.px-1{
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-3{
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.pt-1{
  padding-top: 0.25rem;
}

.pb-0{
  padding-bottom: 0px;
}

.text-center{
  text-align: center;
}

.align-text-top{
  vertical-align: text-top;
}

.text-2xl{
  font-size: 1.5rem;
  line-height: 2rem;
}

.text-sm{
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.text-6xl{
  font-size: 3.75rem;
  line-height: 1;
}

.text-3xl{
  font-size: 1.875rem;
  line-height: 2.25rem;
}

.font-semibold{
  font-weight: 600;
}

.text-gray-400{
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.text-gray-500{
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.text-red-400{
  --tw-text-opacity: 1;
  color: rgba(248, 113, 113, var(--tw-text-opacity));
}

.text-blue-300{
  --tw-text-opacity: 1;
  color: rgba(147, 197, 253, var(--tw-text-opacity));
}

.text-yellow-500{
  --tw-text-opacity: 1;
  color: rgba(245, 158, 11, var(--tw-text-opacity));
}

.text-gray-300{
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
}

.antialiased{
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.placeholder-gray-400::-moz-placeholder{
  --tw-placeholder-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-placeholder-opacity));
}

.placeholder-gray-400:-ms-input-placeholder{
  --tw-placeholder-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-placeholder-opacity));
}

.placeholder-gray-400::placeholder{
  --tw-placeholder-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-placeholder-opacity));
}

.shadow-xl{
  --tw-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow-lg{
  --tw-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.shadow{
  --tw-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.transition-all{
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-colors{
  transition-property: background-color, border-color, color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-500{
  transition-duration: 500ms;
}

.duration-300{
  transition-duration: 300ms;
}

.duration-700{
  transition-duration: 700ms;
}

.ease-linear{
  transition-timing-function: linear;
}

.ease-in-out{
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* Tailwindcss Form Controls Reset */

/* Define Theme Dynamics by Variables */

:root {
  --color-light: #ffffff;
  --color-dark: #111827;
}

/* 
    bg-gray-300 = #f3f4f6 
    bg-gray-700 = #374151 
    bg-gray-800 = #1f2937 
    bg-gray-900 = #111827 
  */

/* Floating Labels Red Asterisk for Required Inputs */

input[required]+label:after,
  select[required]+label:after,
  textarea[required]+label:after {
  content: '\200a\002a';
  color: red;
}

/* OUTLINE Custom Inputs */

.outlineFieldSet > :not([hidden]) ~ :not([hidden]){
  --tw-space-y-reverse: 0;
  margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(1rem * var(--tw-space-y-reverse));
}

.outlineFieldSet{
  border-radius: 0.5rem;
  border-width: 1px;
  --tw-border-opacity: 1;
  border-color: rgba(209, 213, 219, var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
  padding: 1rem;
  --tw-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.dark .outlineFieldSet{
  --tw-border-opacity: 1;
  border-color: rgba(75, 85, 99, var(--tw-border-opacity));
  --tw-bg-opacity: 1;
  background-color: rgba(17, 24, 39, var(--tw-bg-opacity));
}

@media (min-width: 640px){
  .outlineFieldSet{
    width: 100%;
  }
}

@media (min-width: 768px){
  .outlineFieldSet{
    width: auto;
  }
}

.outlineLedgend{
  font-size: 1.125rem;
  line-height: 1.75rem;
  font-weight: 700;
}

.dark .outlineLedgend{
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.outline span{
  position: absolute;
  right: -0.125rem;
  top: -0.125rem;
  bottom: -0.125rem;
  z-index: -1;
  display: inline-flex;
  align-items: center;
  border-top-right-radius: 0.375rem;
  border-bottom-right-radius: 0.375rem;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

.dark .outline span{
  --tw-border-opacity: 1;
  border-color: rgba(75, 85, 99, var(--tw-border-opacity));
}

.outline span svg{
  height: 1.25rem;
  width: 1.25rem;
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.outline span ~ input{
  padding-right: 4rem;
}

.outline{
  position: relative;
  flex-grow: 1;
  border-radius: 0.5rem;
  border-width: 2px;
  --tw-border-opacity: 1;
  border-color: rgba(229, 231, 235, var(--tw-border-opacity));
}

.dark .outline{
  --tw-border-opacity: 1;
  border-color: rgba(75, 85, 99, var(--tw-border-opacity));
}

.outline:focus-within, .outline:focus-within span{
  --tw-border-opacity: 1;
  border-color: rgba(147, 197, 253, var(--tw-border-opacity));
}

.outline ::-webkit-input-placeholder{
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
  opacity: 0;
}

.dark .outline ::-webkit-input-placeholder{
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
}

.outline:focus-within ::-webkit-input-placeholder{
  opacity: 1;
  -webkit-transition-property: opacity;
  transition-property: opacity;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-duration: 500ms;
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.outline ::-moz-placeholder{
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
  opacity: 0;
}

.dark .outline ::-moz-placeholder{
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
}

.outline:focus-within ::-moz-placeholder{
  opacity: 1;
}

.outline :is(
    input ~ label, select ~ label, textarea ~ label){
  pointer-events: none;
  position: absolute;
  top: 0px;
  margin: 0.5rem;
  margin-left: 0.75rem;
  transform-origin: left;
  --tw-transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  padding-left: 0.25rem;
  padding-right: 0.25rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-duration: 300ms;
  transition-timing-function: linear;
}

.dark .outline :is(
    input ~ label, .dark select ~ label, .dark textarea ~ label){
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.outline :is(
    input:focus-within ~ label, select:focus-within ~ label, textarea:focus-within ~ label, input:not(:-moz-placeholder-shown) ~ label, select:not(:-moz-placeholder-shown) ~ label, textarea:not(:-moz-placeholder-shown) ~ label){
  --tw-translate-y: -1.4rem;
  transform: var(--tw-transform);
  --tw-translate-x: -0.5rem;
  transform: var(--tw-transform);
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: var(--tw-transform);
}

.outline :is(
    input:focus-within ~ label, select:focus-within ~ label, textarea:focus-within ~ label, input:not(:-ms-input-placeholder) ~ label, select:not(:-ms-input-placeholder) ~ label, textarea:not(:-ms-input-placeholder) ~ label){
  --tw-translate-y: -1.4rem;
  transform: var(--tw-transform);
  --tw-translate-x: -0.5rem;
  transform: var(--tw-transform);
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: var(--tw-transform);
}

.outline :is(
    input:focus-within ~ label, select:focus-within ~ label, textarea:focus-within ~ label, input:not(:placeholder-shown) ~ label, select:not(:placeholder-shown) ~ label, textarea:not(:placeholder-shown) ~ label){
  --tw-translate-y: -1.4rem;
  transform: var(--tw-transform);
  --tw-translate-x: -0.5rem;
  transform: var(--tw-transform);
  --tw-scale-x: .75;
  --tw-scale-y: .75;
  transform: var(--tw-transform);
}

.outline :is(
    input, select, textarea){
  display: block;
  width: 100%;
  border-radius: 0.375rem;
  border-width: 0px;
  background-color: var(--color-light);
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

.outline :is(
    input:focus, select:focus, textarea):focus{
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.dark .outline :is(
    input, .dark select, .dark textarea){
  background-color: var(--color-dark);
}

.outline select{
  width: -webkit-fill-available;
  padding-right: 2.5rem;
}

@media (min-width: 1024px){
  .outline select{
    flex-shrink: 0;
  }
}

.outline select {
  width: -moz-available
}

.outline select option{
  --tw-bg-opacity: 1;
  background-color: rgba(255, 255, 255, var(--tw-bg-opacity));
}

.dark .outline select option{
  --tw-bg-opacity: 1;
  background-color: rgba(17, 24, 39, var(--tw-bg-opacity));
}

.outline textarea{
  height: 100%;
  resize: none;
}

/* Tabs */

.tab-pane.active{
  display: block;
}

li a{
  border-bottom-width: 4px;
  border-color: transparent;
  padding-bottom: 0.25rem;
  --tw-text-opacity: 1;
  color: rgba(209, 213, 219, var(--tw-text-opacity));
}

.dark li a{
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

li:hover a, li.active a{
  --tw-text-opacity: 1;
  color: rgba(156, 163, 175, var(--tw-text-opacity));
}

.dark li:hover a, .dark li.active a{
  --tw-text-opacity: 1;
  color: rgba(245, 158, 11, var(--tw-text-opacity));
}

.btn:focus-within, .btn:hover{
  cursor: pointer;
  border-radius: 0.125rem;
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(209, 213, 219, var(--tw-ring-opacity));
  --tw-ring-opacity: 0.8;
  --tw-ring-offset-width: 4px;
  --tw-ring-offset-color: #e5e7eb;
}

.dark .btn:focus-within, .dark .btn:hover{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(55, 65, 81, var(--tw-ring-opacity));
  --tw-ring-opacity: 0.8;
  --tw-ring-offset-color: #1f2937;
}

.srcContainer:focus-within{
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
}

.dark .srcContainer:focus-within{
  --tw-text-opacity: 1;
  color: rgba(245, 158, 11, var(--tw-text-opacity));
}

/* Fine-Tune the Date Fields */

.outline input::-webkit-calendar-picker-indicator{
  cursor: pointer;
  background-image: none;
}

.outline input[type="time"], .outline input[type="date"], .outline input[type="datetime-local"]{
  position: relative;
  width: auto;
  min-width: -webkit-min-content;
  min-width: -moz-min-content;
  min-width: min-content;
  padding-right: 1rem;
}

.outline input::-webkit-datetime-edit{
  max-width: -webkit-min-content;
  max-width: min-content;
}

.outline input.date{
  padding-right: 0.25rem;
}

.outline input.time{
  padding-left: 0.25rem;
}

.outline input::-webkit-calendar-picker-indicator{
  position: absolute;
  top: 0px;
  right: 0px;
  bottom: 0px;
  left: 0px;
  margin: 0.25rem;
  height: auto;
  width: auto;
  cursor: pointer;
  background-color: transparent;
}

/* ADDED by JS for Borderless */

.borderLess.outline, .borderLess.outline span{
  border-color: transparent;
}

.borderLess.outline :is(
    input:focus-within, select:focus-within, textarea:focus-within), :is(input).borderlessInputs:focus{
  --tw-bg-opacity: 1;
  background-color: rgba(147, 197, 253, var(--tw-bg-opacity));
  --tw-bg-opacity: 0.2;
}

/* REMOVED by JS for Borderless */

.Bordered.outline :is(
    input:focus-within ~ label, select:focus-within ~ label, textarea:focus-within ~ label, input:not(:-moz-placeholder-shown) ~ label, select:not(:-moz-placeholder-shown) ~ label, textarea:not(:-moz-placeholder-shown) ~ label){
  --tw-translate-y: -1.5rem;
  transform: var(--tw-transform);
  --tw-translate-x: -0.5rem;
  transform: var(--tw-transform);
  background: linear-gradient(transparent 50%, var(--color-light) 50%, var(--color-light) 60%, transparent 60%) ;
}

.Bordered.outline :is(
    input:focus-within ~ label, select:focus-within ~ label, textarea:focus-within ~ label, input:not(:-ms-input-placeholder) ~ label, select:not(:-ms-input-placeholder) ~ label, textarea:not(:-ms-input-placeholder) ~ label){
  --tw-translate-y: -1.5rem;
  transform: var(--tw-transform);
  --tw-translate-x: -0.5rem;
  transform: var(--tw-transform);
  background: linear-gradient(transparent 50%, var(--color-light) 50%, var(--color-light) 60%, transparent 60%) ;
}

.Bordered.outline :is(
    input:focus-within ~ label, select:focus-within ~ label, textarea:focus-within ~ label, input:not(:placeholder-shown) ~ label, select:not(:placeholder-shown) ~ label, textarea:not(:placeholder-shown) ~ label){
  --tw-translate-y: -1.5rem;
  transform: var(--tw-transform);
  --tw-translate-x: -0.5rem;
  transform: var(--tw-transform);
  background: linear-gradient(transparent 50%, var(--color-light) 50%, var(--color-light) 60%, transparent 60%) ;
}

.dark .Bordered.outline :is(
    input:focus-within ~ label, .dark select:focus-within ~ label, .dark textarea:focus-within ~ label, .dark input:not(:-moz-placeholder-shown) ~ label, .dark select:not(:-moz-placeholder-shown) ~ label, .dark textarea:not(:-moz-placeholder-shown) ~ label) {
  background: linear-gradient(transparent 50%, var(--color-dark) 50%, var(--color-dark) 60%, transparent 60%) ;
}

.dark .Bordered.outline :is(
    input:focus-within ~ label, .dark select:focus-within ~ label, .dark textarea:focus-within ~ label, .dark input:not(:-ms-input-placeholder) ~ label, .dark select:not(:-ms-input-placeholder) ~ label, .dark textarea:not(:-ms-input-placeholder) ~ label) {
  background: linear-gradient(transparent 50%, var(--color-dark) 50%, var(--color-dark) 60%, transparent 60%) ;
}

.dark .Bordered.outline :is(
    input:focus-within ~ label, .dark select:focus-within ~ label, .dark textarea:focus-within ~ label, .dark input:not(:placeholder-shown) ~ label, .dark select:not(:placeholder-shown) ~ label, .dark textarea:not(:placeholder-shown) ~ label) {
  background: linear-gradient(transparent 50%, var(--color-dark) 50%, var(--color-dark) 60%, transparent 60%) ;
}

/* Responsive Navigation for Mobile View */

.navResponsive{
  max-height: 15rem;
}

.tabNavResponsive{
  max-height: 200px;
  border-bottom-right-radius: 0px;
  border-bottom-left-radius: 0px;
  transition-property: max-height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.navResponsive svg.fa-plus, .tabNavResponsive svg.fa-plus{
  --tw-rotate: 45deg;
  transform: var(--tw-transform);
  transition-duration: 700ms;
}

.tabNavResponsive .showThemeChanger{
  visibility: visible;
  transition-delay: 700ms;
}

/* Mobile Responsive Menu's */

.plusX{
  --tw-rotate: 0deg;
  transform: var(--tw-transform);
  transition-duration: 1000ms;
}

.plusX:hover{
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: var(--tw-transform);
}

.transTime{
  transition-property: max-height;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
  transition-duration: 1000ms;
}

/* Pseudo Classes */

/* bText Selection Colors */

::-moz-selection{
  --tw-bg-opacity: 1;
  background-color: rgba(251, 191, 36, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(29, 78, 216, var(--tw-text-opacity));
}

::selection{
  --tw-bg-opacity: 1;
  background-color: rgba(251, 191, 36, var(--tw-bg-opacity));
  --tw-text-opacity: 1;
  color: rgba(29, 78, 216, var(--tw-text-opacity));
}

/* Remove scrollbars from page and inputs */

::-webkit-scrollbar{
  width: 0px;
}

html {
  scrollbar-width: none;
}

/* Shift button left to add another button */

::-webkit-search-cancel-button{
  margin-top: 0px;
  margin-bottom: 0px;
  margin-left: 1.25rem;
  margin-right: 1.25rem;
  cursor: pointer;
}

/* ! Hopefully A Temporary Fix */

@media (min-width: 1024px){
  .tab-pane#Details{
    margin-top: -0.5rem;
  }
}

.outlineFieldSet > :not([hidden]) ~ :not([hidden]){
  /* 
        Null this wierd Tailwind compilled css
        And Add it Inside The Below Breakpoint.
      */
  margin-top: 0;
}

@media (min-width: 1024px){
  /* 
        Taken from the Tailwind Compiled css line 673 Approx
        This Problem Occurs due to Adding Fieldsets 
        with Class "contents" to use with "grid"
      */

  .outlineFieldSet > :not([hidden]) ~ :not([hidden]){
    --tw-space-y-reverse: 0;
    margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(1rem * var(--tw-space-y-reverse));
  }
}

.hover\:scale-110:hover{
  --tw-scale-x: 1.1;
  --tw-scale-y: 1.1;
  transform: var(--tw-transform);
}

.hover\:text-gray-500:hover{
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.hover\:text-gray-600:hover{
  --tw-text-opacity: 1;
  color: rgba(75, 85, 99, var(--tw-text-opacity));
}

.hover\:text-gray-900:hover{
  --tw-text-opacity: 1;
  color: rgba(17, 24, 39, var(--tw-text-opacity));
}

.focus\:border-transparent:focus{
  border-color: transparent;
}

.focus\:text-gray-100:focus{
  --tw-text-opacity: 1;
  color: rgba(243, 244, 246, var(--tw-text-opacity));
}

.focus\:ring-blue-300:focus{
  --tw-ring-opacity: 1;
  --tw-ring-color: rgba(147, 197, 253, var(--tw-ring-opacity));
}

.focus\:ring-transparent:focus{
  --tw-ring-color: transparent;
}

.group:active .group-active\:outline-white{
  outline: 2px dotted white;
  outline-offset: 2px;
}

.dark .dark\:mx-auto{
  margin-left: auto;
  margin-right: auto;
}

.dark .dark\:w-11\/12{
  width: 91.666667%;
}

.dark .dark\:border-yellow-600{
  --tw-border-opacity: 1;
  border-color: rgba(217, 119, 6, var(--tw-border-opacity));
}

.dark .dark\:border-gray-700{
  --tw-border-opacity: 1;
  border-color: rgba(55, 65, 81, var(--tw-border-opacity));
}

.dark .dark\:bg-gray-800{
  --tw-bg-opacity: 1;
  background-color: rgba(31, 41, 55, var(--tw-bg-opacity));
}

.dark .dark\:bg-gray-900{
  --tw-bg-opacity: 1;
  background-color: rgba(17, 24, 39, var(--tw-bg-opacity));
}

.dark .dark\:bg-yellow-600{
  --tw-bg-opacity: 1;
  background-color: rgba(217, 119, 6, var(--tw-bg-opacity));
}

.dark .dark\:bg-gray-700{
  --tw-bg-opacity: 1;
  background-color: rgba(55, 65, 81, var(--tw-bg-opacity));
}

.dark .dark\:bg-opacity-40{
  --tw-bg-opacity: 0.4;
}

.dark .dark\:bg-opacity-50{
  --tw-bg-opacity: 0.5;
}

.dark .dark\:bg-opacity-90{
  --tw-bg-opacity: 0.9;
}

.dark .dark\:text-yellow-500{
  --tw-text-opacity: 1;
  color: rgba(245, 158, 11, var(--tw-text-opacity));
}

.dark .dark\:text-yellow-600{
  --tw-text-opacity: 1;
  color: rgba(217, 119, 6, var(--tw-text-opacity));
}

.dark .dark\:text-gray-100{
  --tw-text-opacity: 1;
  color: rgba(243, 244, 246, var(--tw-text-opacity));
}

.dark .dark\:text-gray-200{
  --tw-text-opacity: 1;
  color: rgba(229, 231, 235, var(--tw-text-opacity));
}

.dark .dark\:text-gray-500{
  --tw-text-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-text-opacity));
}

.dark .dark\:placeholder-gray-500::-moz-placeholder{
  --tw-placeholder-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-placeholder-opacity));
}

.dark .dark\:placeholder-gray-500:-ms-input-placeholder{
  --tw-placeholder-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-placeholder-opacity));
}

.dark .dark\:placeholder-gray-500::placeholder{
  --tw-placeholder-opacity: 1;
  color: rgba(107, 114, 128, var(--tw-placeholder-opacity));
}

.dark .dark\:checked\:bg-opacity-80:checked{
  --tw-bg-opacity: 0.8;
}

.dark .dark\:hover\:text-yellow-400:hover{
  --tw-text-opacity: 1;
  color: rgba(251, 191, 36, var(--tw-text-opacity));
}

.dark .dark\:hover\:text-yellow-500:hover{
  --tw-text-opacity: 1;
  color: rgba(245, 158, 11, var(--tw-text-opacity));
}

.dark .dark\:hover\:text-yellow-600:hover{
  --tw-text-opacity: 1;
  color: rgba(217, 119, 6, var(--tw-text-opacity));
}

.dark .dark\:hover\:text-gray-100:hover{
  --tw-text-opacity: 1;
  color: rgba(243, 244, 246, var(--tw-text-opacity));
}

.dark .dark\:focus\:ring-offset-gray-800:focus{
  --tw-ring-offset-color: #1f2937;
}

@media (min-width: 640px){
  .sm\:visible{
    visibility: visible;
  }

  .sm\:invisible{
    visibility: hidden;
  }

  .sm\:order-1{
    order: 1;
  }

  .sm\:order-2{
    order: 2;
  }

  .sm\:order-3{
    order: 3;
  }

  .sm\:col-span-1{
    grid-column: span 1 / span 1;
  }

  .sm\:col-span-2{
    grid-column: span 2 / span 2;
  }

  .sm\:mx-4{
    margin-left: 1rem;
    margin-right: 1rem;
  }

  .sm\:ml-auto{
    margin-left: auto;
  }

  .sm\:mr-0{
    margin-right: 0px;
  }

  .sm\:mr-\[10\%\]{
    margin-right: 10%;
  }

  .sm\:flex{
    display: flex;
  }

  .sm\:h-auto{
    height: auto;
  }

  .sm\:max-h-14{
    max-height: 3.5rem;
  }

  .sm\:w-max{
    width: -webkit-max-content;
    width: -moz-max-content;
    width: max-content;
  }

  .sm\:\!w-40{
    width: 10rem !important;
  }

  .sm\:w-full{
    width: 100%;
  }

  .sm\:grid-cols-2{
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .sm\:flex-row{
    flex-direction: row;
  }

  .sm\:gap-4{
    gap: 1rem;
  }

  .sm\:overflow-visible{
    overflow: visible;
  }

  .sm\:rounded-b-none{
    border-bottom-right-radius: 0px;
    border-bottom-left-radius: 0px;
  }

  .sm\:py-3{
    padding-top: 0.75rem;
    padding-bottom: 0.75rem;
  }

  .sm\:text-2xl{
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

@media (min-width: 768px){
  .md\:visible{
    visibility: visible;
  }

  .md\:invisible{
    visibility: hidden;
  }

  .md\:fixed{
    position: fixed;
  }

  .md\:bottom-1\/3{
    bottom: 33.333333%;
  }

  .md\:col-span-3{
    grid-column: span 3 / span 3;
  }

  .md\:col-span-2{
    grid-column: span 2 / span 2;
  }

  .md\:col-span-1{
    grid-column: span 1 / span 1;
  }

  .md\:mx-4{
    margin-left: 1rem;
    margin-right: 1rem;
  }

  .md\:mt-12{
    margin-top: 3rem;
  }

  .md\:ml-60{
    margin-left: 15rem;
  }

  .md\:mt-0{
    margin-top: 0px;
  }

  .md\:ml-auto{
    margin-left: auto;
  }

  .md\:h-16{
    height: 4rem;
  }

  .md\:max-h-16{
    max-height: 4rem;
  }

  .md\:w-min{
    width: -webkit-min-content;
    width: -moz-min-content;
    width: min-content;
  }

  .md\:max-w-screen-sm{
    max-width: 640px;
  }

  .md\:max-w-\[192px\]{
    max-width: 192px;
  }

  .md\:grid-cols-3{
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .md\:flex-row{
    flex-direction: row;
  }

  .md\:px-4{
    padding-left: 1rem;
    padding-right: 1rem;
  }

  .md\:px-6{
    padding-left: 1.5rem;
    padding-right: 1.5rem;
  }

  .md\:transition-none{
    transition-property: none;
  }
}

@media (min-width: 1024px){
  .lg\:col-span-4{
    grid-column: span 4 / span 4;
  }

  .lg\:col-span-2{
    grid-column: span 2 / span 2;
  }

  .lg\:col-start-1{
    grid-column-start: 1;
  }

  .lg\:col-start-4{
    grid-column-start: 4;
  }

  .lg\:col-end-4{
    grid-column-end: 4;
  }

  .lg\:col-end-5{
    grid-column-end: 5;
  }

  .lg\:row-start-1{
    grid-row-start: 1;
  }

  .lg\:row-start-2{
    grid-row-start: 2;
  }

  .lg\:row-start-3{
    grid-row-start: 3;
  }

  .lg\:row-start-4{
    grid-row-start: 4;
  }

  .lg\:row-end-4{
    grid-row-end: 4;
  }

  .lg\:row-end-2{
    grid-row-end: 2;
  }

  .lg\:row-end-3{
    grid-row-end: 3;
  }

  .lg\:row-end-6{
    grid-row-end: 6;
  }

  .lg\:block{
    display: block;
  }

  .lg\:grid{
    display: grid;
  }

  .lg\:contents{
    display: contents;
  }

  .lg\:hidden{
    display: none;
  }

  .lg\:h-screen{
    height: 100vh;
  }

  .lg\:h-\[445px\]{
    height: 445px;
  }

  .lg\:h-full{
    height: 100%;
  }

  .lg\:max-h-\[445px\]{
    max-height: 445px;
  }

  .lg\:min-h-\[445px\]{
    min-height: 445px;
  }

  .lg\:w-full{
    width: 100%;
  }

  .lg\:min-w-\[1024px\]{
    min-width: 1024px;
  }

  .lg\:grid-cols-4{
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .lg\:grid-rows-4{
    grid-template-rows: repeat(4, minmax(0, 1fr));
  }

  .lg\:flex-col{
    flex-direction: column;
  }

  .lg\:overflow-y-scroll{
    overflow-y: scroll;
  }

  .lg\:bg-gray-50{
    --tw-bg-opacity: 1;
    background-color: rgba(249, 250, 251, var(--tw-bg-opacity));
  }

  .lg\:bg-gray-100{
    --tw-bg-opacity: 1;
    background-color: rgba(243, 244, 246, var(--tw-bg-opacity));
  }

  .dark .lg\:dark\:bg-gray-900{
    --tw-bg-opacity: 1;
    background-color: rgba(17, 24, 39, var(--tw-bg-opacity));
  }
}
